From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Fri, 12 Oct 2018 14:10:46 -0500
Subject: [PATCH] Add more Witch API


diff --git a/src/main/java/net/minecraft/world/entity/monster/EntityWitch.java b/src/main/java/net/minecraft/world/entity/monster/EntityWitch.java
index c6d79125e7dd982fc528ce61144005194cbaa323..63fb08e7b4290353e5148d1acb58f091dc5b08be 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EntityWitch.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EntityWitch.java
@@ -1,5 +1,11 @@
 package net.minecraft.world.entity.monster;
 
+// Paper start
+import com.destroystokyo.paper.event.entity.WitchReadyPotionEvent;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.Witch;
+// Paper end
+
 import java.util.Iterator;
 import java.util.List;
 import java.util.UUID;
@@ -49,7 +55,7 @@ public class EntityWitch extends EntityRaider implements IRangedEntity {
     private static final UUID b = UUID.fromString("5CD17E52-A79A-43D3-A529-90FDE04B181E");
     private static final AttributeModifier bo = new AttributeModifier(EntityWitch.b, "Drinking speed penalty", -0.25D, AttributeModifier.Operation.ADDITION);
     private static final DataWatcherObject<Boolean> bp = DataWatcher.a(EntityWitch.class, DataWatcherRegistry.i);
-    private int bq;
+    private int bq; public int getPotionUseTimeLeft() { return bq; } public void setPotionUseTimeLeft(int timeLeft) { bq = timeLeft; } // Paper - OBFHELPER
     private PathfinderGoalNearestHealableRaider<EntityRaider> br;
     private PathfinderGoalNearestAttackableTargetWitch<EntityHuman> bs;
 
@@ -95,10 +101,12 @@ public class EntityWitch extends EntityRaider implements IRangedEntity {
         return SoundEffects.ENTITY_WITCH_DEATH;
     }
 
+    public void setDrinkingPotion(boolean drinkingPotion) { v(drinkingPotion); } // Paper - OBFHELPER
     public void v(boolean flag) {
         this.getDataWatcher().set(EntityWitch.bp, flag);
     }
 
+    public boolean isDrinkingPotion() { return m(); } // Paper - OBFHELPER
     public boolean m() {
         return (Boolean) this.getDataWatcher().get(EntityWitch.bp);
     }
@@ -157,21 +165,24 @@ public class EntityWitch extends EntityRaider implements IRangedEntity {
                 }
 
                 if (potionregistry != null) {
-                    // Paper start
                     ItemStack potion = PotionUtil.a(new ItemStack(Items.POTION), potionregistry);
-                    org.bukkit.inventory.ItemStack bukkitStack = com.destroystokyo.paper.event.entity.WitchReadyPotionEvent.process((org.bukkit.entity.Witch) this.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(potion));
-                    this.setSlot(EnumItemSlot.MAINHAND, org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(bukkitStack));
+                    // Paper start - logic moved into setDrinkingPotion, copy exact impl into the method and then comment out
+                    this.setDrinkingPotion(potion);
+//                    org.bukkit.inventory.ItemStack bukkitStack = com.destroystokyo.paper.event.entity.WitchReadyPotionEvent.process((org.bukkit.entity.Witch) this.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(potion));
+//                    this.setSlot(EnumItemSlot.MAINHAND, org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(bukkitStack));
+//                    // Paper end
+//                    this.bq = this.getItemInMainHand().k();
+//                    this.v(true);
+//                    if (!this.isSilent()) {
+//                        this.world.playSound((EntityHuman) null, this.locX(), this.locY(), this.locZ(), SoundEffects.ENTITY_WITCH_DRINK, this.getSoundCategory(), 1.0F, 0.8F + this.random.nextFloat() * 0.4F);
+//                    }
+//
+//                    AttributeModifiable attributemodifiable = this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED);
+//
+//                    attributemodifiable.removeModifier(EntityWitch.bo);
+//                    attributemodifiable.b(EntityWitch.bo);
                     // Paper end
-                    this.bq = this.getItemInMainHand().k();
-                    this.v(true);
-                    if (!this.isSilent()) {
-                        this.world.playSound((EntityHuman) null, this.locX(), this.locY(), this.locZ(), SoundEffects.ENTITY_WITCH_DRINK, this.getSoundCategory(), 1.0F, 0.8F + this.random.nextFloat() * 0.4F);
-                    }
 
-                    AttributeModifiable attributemodifiable = this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED);
-
-                    attributemodifiable.removeModifier(EntityWitch.bo);
-                    attributemodifiable.b(EntityWitch.bo);
                 }
             }
 
@@ -183,6 +194,24 @@ public class EntityWitch extends EntityRaider implements IRangedEntity {
         super.movementTick();
     }
 
+    // Paper start - moved to its own method
+    public void setDrinkingPotion(ItemStack potion) {
+        org.bukkit.inventory.ItemStack bukkitStack = com.destroystokyo.paper.event.entity.WitchReadyPotionEvent.process((org.bukkit.entity.Witch) this.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(potion));
+        this.setSlot(EnumItemSlot.MAINHAND, org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(bukkitStack));
+        // Paper end
+        this.bq = this.getItemInMainHand().k();
+        this.v(true);
+        if (!this.isSilent()) {
+            this.world.playSound((EntityHuman) null, this.locX(), this.locY(), this.locZ(), SoundEffects.ENTITY_WITCH_DRINK, this.getSoundCategory(), 1.0F, 0.8F + this.random.nextFloat() * 0.4F);
+        }
+
+        AttributeModifiable attributemodifiable = this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED);
+
+        attributemodifiable.removeModifier(EntityWitch.bo);
+        attributemodifiable.b(EntityWitch.bo);
+    }
+    // Paper end
+
     @Override
     public SoundEffect eL() {
         return SoundEffects.ENTITY_WITCH_CELEBRATE;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftWitch.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftWitch.java
index 9cc34cdb43596eff34625045f884b93da3f27ab6..3b553c2455948a4102754b2617c2301c49f476d6 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftWitch.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftWitch.java
@@ -4,6 +4,13 @@ import net.minecraft.world.entity.monster.EntityWitch;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.entity.EntityType;
 import org.bukkit.entity.Witch;
+// Paper start
+import com.destroystokyo.paper.entity.CraftRangedEntity;
+import com.google.common.base.Preconditions;
+import org.bukkit.Material;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.inventory.ItemStack;
+// Paper end
 
 public class CraftWitch extends CraftRaider implements Witch, com.destroystokyo.paper.entity.CraftRangedEntity<EntityWitch> { // Paper
     public CraftWitch(CraftServer server, EntityWitch entity) {
@@ -24,4 +31,28 @@ public class CraftWitch extends CraftRaider implements Witch, com.destroystokyo.
     public EntityType getType() {
         return EntityType.WITCH;
     }
+
+    // Paper start
+    public boolean isDrinkingPotion() {
+        return getHandle().isDrinkingPotion();
+    }
+
+    public int getPotionUseTimeLeft() {
+        return getHandle().getPotionUseTimeLeft();
+    }
+
+    @Override
+    public void setPotionUseTimeLeft(int ticks) {
+        getHandle().setPotionUseTimeLeft(ticks);
+    }
+
+    public ItemStack getDrinkingPotion() {
+        return CraftItemStack.asCraftMirror(getHandle().getItemInMainHand());
+    }
+
+    public void setDrinkingPotion(ItemStack potion) {
+        Preconditions.checkArgument(potion == null || potion.getType().isEmpty() || potion.getType() == Material.POTION, "must be potion, air, or null");
+        getHandle().setDrinkingPotion(CraftItemStack.asNMSCopy(potion));
+    }
+    // Paper end
 }
