From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 17 Apr 2016 17:27:09 -0400
Subject: [PATCH] Prevent Fire from loading chunks & wrongly spread

This causes the nether to spam unload/reload chunks, plus overall
bad behavior.

This also stops fire from spreading to illegal locations.

diff --git a/src/main/java/net/minecraft/world/level/block/BlockFire.java b/src/main/java/net/minecraft/world/level/block/BlockFire.java
index ee5400fd3e493e1f0518a9e47ddbc997e7a0fb92..c22fad0038fdb0769e23db782e3341206fbd80f9 100644
--- a/src/main/java/net/minecraft/world/level/block/BlockFire.java
+++ b/src/main/java/net/minecraft/world/level/block/BlockFire.java
@@ -135,7 +135,7 @@ public class BlockFire extends BlockFireAbstract {
                 BlockStateBoolean blockstateboolean = (BlockStateBoolean) BlockFire.h.get(enumdirection);
 
                 if (blockstateboolean != null) {
-                    iblockdata1 = (IBlockData) iblockdata1.set(blockstateboolean, this.e(iblockaccess.getType(blockposition.shift(enumdirection))));
+                    iblockdata1 = (IBlockData) iblockdata1.set(blockstateboolean, this.e(iblockaccess.getTypeIfLoaded(blockposition.shift(enumdirection)))); // Paper - prevent chunk loads
                 }
             }
 
@@ -215,6 +215,7 @@ public class BlockFire extends BlockFireAbstract {
                                 }
 
                                 blockposition_mutableblockposition.a((BaseBlockPosition) blockposition, l, j1, i1);
+                                if (blockposition_mutableblockposition.isInvalidYLocation() || !worldserver.isLoaded(blockposition_mutableblockposition)) continue; // Paper
                                 int l1 = this.a((IWorldReader) worldserver, (BlockPosition) blockposition_mutableblockposition);
 
                                 if (l1 > 0) {
@@ -260,10 +261,16 @@ public class BlockFire extends BlockFireAbstract {
     }
 
     private void trySpread(World world, BlockPosition blockposition, int i, Random random, int j, BlockPosition sourceposition) { // CraftBukkit add sourceposition
-        int k = this.getBurnChance(world.getType(blockposition));
+        // Paper start
+        final IBlockData iblockdata = world.getTypeIfLoaded(blockposition);
+        if (iblockdata == null) {
+            return;
+        }
+        int k = this.getBurnChance(iblockdata);
+        // Paper end
 
         if (random.nextInt(i) < k) {
-            IBlockData iblockdata = world.getType(blockposition);
+            //IBlockData iblockdata = world.getType(blockposition); // Paper
 
             // CraftBukkit start
             org.bukkit.block.Block theBlock = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
@@ -309,7 +316,7 @@ public class BlockFire extends BlockFireAbstract {
         for (int j = 0; j < i; ++j) {
             EnumDirection enumdirection = aenumdirection[j];
 
-            if (this.e(iblockaccess.getType(blockposition.shift(enumdirection)))) {
+            if (this.e(iblockaccess.getTypeIfLoaded(blockposition.shift(enumdirection)))) { // Paper - prevent chunk loads
                 return true;
             }
         }
@@ -327,7 +334,12 @@ public class BlockFire extends BlockFireAbstract {
 
             for (int k = 0; k < j; ++k) {
                 EnumDirection enumdirection = aenumdirection[k];
-                IBlockData iblockdata = iworldreader.getType(blockposition.shift(enumdirection));
+                // Paper start
+                IBlockData iblockdata = iworldreader.getTypeIfLoaded(blockposition.shift(enumdirection));
+                if (iblockdata == null) {
+                    continue;
+                }
+                // Paper end
 
                 i = Math.max(this.getFlameChance(iblockdata), i);
             }
@@ -338,7 +350,7 @@ public class BlockFire extends BlockFireAbstract {
 
     @Override
     protected boolean e(IBlockData iblockdata) {
-        return this.getFlameChance(iblockdata) > 0;
+        return iblockdata != null && this.getFlameChance(iblockdata) > 0;  // Paper - iblockdata can be nullable if chunk is unloaded now
     }
 
     @Override
